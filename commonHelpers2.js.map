{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\niziToast.settings({\n  position: 'topRight',\n  timeout: 3000,\n  resetOnHover: true,\n  transitionIn: 'flipInX',\n  transitionOut: 'flipOutX',\n});\n\nlet isShown = false;\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(e) {\n  e.preventDefault();\n  const delay = form.elements.delay.value;\n  const state = form.elements.state.value;\n  // form reset with delay\n  if (!isShown) {\n    isShown = true;\n    iziToast.info({ message: 'Form will reset in 10 sec' });\n    setTimeout(() => {\n      iziToast.info({ message: 'Form reset...' });\n      form.reset();\n      isShown = false;\n    }, 10000);\n  }\n\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      }\n      reject(delay);\n    }, delay);\n  })\n    .then(value =>\n      iziToast.success({ message: `Fulfilled promise in ${value}ms` })\n    )\n    .catch(error =>\n      iziToast.error({ message: `Rejected promise in ${error}ms` })\n    );\n}\n"],"names":["iziToast","isShown","form","promiseGenerator","e","delay","state","resolve","reject","value","error"],"mappings":"wIAGAA,EAAS,SAAS,CAChB,SAAU,WACV,QAAS,IACT,aAAc,GACd,aAAc,UACd,cAAe,UACjB,CAAC,EAED,IAAIC,EAAU,GACd,MAAMC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAgB,EAEhD,SAASA,EAAiBC,EAAG,CAC3BA,EAAE,eAAc,EAChB,MAAMC,EAAQH,EAAK,SAAS,MAAM,MAC5BI,EAAQJ,EAAK,SAAS,MAAM,MAE7BD,IACHA,EAAU,GACVD,EAAS,KAAK,CAAE,QAAS,2BAA6B,CAAA,EACtD,WAAW,IAAM,CACfA,EAAS,KAAK,CAAE,QAAS,eAAiB,CAAA,EAC1CE,EAAK,MAAK,EACVD,EAAU,EACX,EAAE,GAAK,GAGV,IAAI,QAAQ,CAACM,EAASC,IAAW,CAC/B,WAAW,IAAM,CACXF,IAAU,aACZC,EAAQF,CAAK,EAEfG,EAAOH,CAAK,CACb,EAAEA,CAAK,CACZ,CAAG,EACE,KAAKI,GACJT,EAAS,QAAQ,CAAE,QAAS,wBAAwBS,MAAW,CAChE,EACA,MAAMC,GACLV,EAAS,MAAM,CAAE,QAAS,uBAAuBU,MAAW,CAClE,CACA"}